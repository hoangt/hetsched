linux-source-2.6.32
	- the actual linux extensions

	sched.h
	- defines runqueue and scheduling entity

	sched_hwaccel.h
	- defines meta information, system calls, computing unit shortinfo

---------------------

userspacecontrol
	- defines system calls to manage hardware accelerators within the system
	- provides frontend that can be used at system start to make compute units known to the system

---------------------

testapplication
	- C++ templates for application development

	worker.cpp
	- defines wrappers for system calls
	- defines functions to manage worker threads
	- runs threads until they are done and performs communication with scheduler interface via wrappers
	- .h-file has to be included by actual workers (worker_*.h)

	worker_*.cpp
	- actual implementation of work to be performed by an application 
	- this has to be implemented by the application developer
	- implementation of the needed interface 
		- implementation of the init, main, free functions for different hardware units
		- implementation of the getImplementationFor and workerMetaInfo functions
		- defines checkpoint (*_resources)
		- these implementations do not communicate with the scheduler

	testapp.cpp
	- This is an example implementation how the functions defined in worker.cpp may be used
	- Can be used as a wrapper to instantiate threads that use the extended scheduler
	- the actual work is done in function "performWork", where the worker threads are spawned

---------------------

Functions that applications actually call to use the scheduler extension
- only the wrappers provided by worker.cpp

What actually has to be written by the application programmer
- worker_*.cpp for each application, examples are provided
- creating instances of an application from within testapp.cpp or rewriting testapp.cpp to own needs

What has to be rewritten for Fortran
- probably worker.cpp and testapp.cpp have to be rewritten completely
- Wrappers of the system calls (as provided by worker.cpp) have to be implemented

How to actually use the Linux Kernel Extension
- Currently it is only usable with a specific Kernel version
- Code has to be rewritten to be provided as Linux patch or better as Linux modules
- If you want to use the scheduler please contact me (Tobias Beisel) directly
